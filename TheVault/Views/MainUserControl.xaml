<UserControl x:Class="TheVault.Views.MainUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewModels="clr-namespace:TheVault.ViewModels"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <Canvas x:Name="BackupCanvas" Grid.Row="0" Grid.RowSpan="4" Grid.Column="0" Grid.ColumnSpan="3"
                Visibility="{Binding BackingUpFiles, Converter={StaticResource BooleanToVisibilityConverter}}"
                Background="{DynamicResource MaterialDesignPaper}"
                ZIndex="10">
            <Grid Width="{Binding ActualWidth, ElementName=BackupCanvas}" 
                  Height="{Binding ActualHeight, ElementName=BackupCanvas}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ProgressBar Grid.Row="1" Grid.Column="1"
                             Style="{StaticResource LoadingProgress}"
                             Minimum="0"
                             Maximum="{Binding ProgressBarMax}"
                             Value="{Binding ProgressBarValue}"
                             VerticalAlignment="Center" 
                             HorizontalAlignment="Center"/>
                <TextBlock Grid.Row="2" Grid.Column="1"
                           Text="Files backup in progress..."
                           Margin="0,20,0,0"
                           Style="{StaticResource BackUpMessage}"/>
            </Grid>
        </Canvas>

        <materialDesign:Card Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                             x:Name="TopCard" Padding="3" UniformCornerRadius="0">
            <Grid x:Name="TopControls">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Row="0" Grid.Column="0"
                        x:Name="OpenFolderOrigin"
                        Style="{StaticResource FolderButton}"
                        Margin="5,5,5,1"
                        Command="{Binding OpenOriginFolderCmd}"
                        Content="OPEN"/>

                <TextBox Grid.Row="0" Grid.Column="1" 
                         x:Name="OriginPath"
                         Margin="0,3,5,0"
                         Focusable="False"
                         Text="{Binding OriginPath}"
                         materialDesign:HintAssist.Hint="Path to origin folder" />

                <Button Grid.Row="1" Grid.Column="0"
                        x:Name="OpenFolderDestination"
                        Style="{StaticResource FolderButton}"
                        Margin="5,1,5,5"
                        Command="{Binding OpenDestinationFolderCmd}"
                        Content="OPEN"/>
            
                <TextBox Grid.Row="1" Grid.Column="1"  
                         x:Name="DestinationPath"
                         Margin="0,0,5,4"
                         Focusable="False"
                         Text="{Binding DestinationPath}"
                         materialDesign:HintAssist.Hint="Path to destination folder" />

                <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="2"
                        x:Name="RefreshOriginFolder"
                        Style="{StaticResource RefreshButton}"
                        Margin="0,5,5,5"
                        Command="{Binding RefreshOriginFolderCmd}"
                        Content="REFRESH"/>
            </Grid>
        </materialDesign:Card>

        <ToolBarTray Grid.Row="1" Grid.Column="0" IsLocked="True">
            <ToolBar Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="True">
                <ListBox SelectionChanged="OnDecryptedListSelectionChanged">
                    <ListBoxItem Padding="0,4" x:Name="SortAlphaOne" ToolTip="Sort by name">
                        <materialDesign:PackIcon Kind="SortAlphabetical" />
                    </ListBoxItem>
                    <ListBoxItem Padding="0,4" x:Name="SortSelected" ToolTip="Sort by selection">
                        <materialDesign:PackIcon Kind="Animation" /> 
                    </ListBoxItem>
                    <ListBoxItem Padding="0,4" x:Name="SortPath" ToolTip="Sort by path">
                        <materialDesign:PackIcon Kind="SortVariant" />
                    </ListBoxItem>
                </ListBox>
                <Separator Margin="6,5" />
                <Label Content="{Binding SelectedFilesToolBar}"
                    VerticalAlignment="Center" />
            </ToolBar>
        </ToolBarTray>
        <ListView Grid.Row="2" Grid.Column="0" 
                  x:Name="DecryptedListView"
                  ItemsSource="{Binding DecryptedFiles}"
                  Focusable="False">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView AllowsColumnReorder="False">
                    <GridViewColumn>
                        <GridViewColumnHeader Style="{StaticResource NoResizeColumnHeader}">
                            <CheckBox IsChecked="{Binding AllSelected, Mode=TwoWay}" />
                        </GridViewColumnHeader>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type viewModels:FileViewModel}">
                                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="Auto" Header="Filename">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type viewModels:FileViewModel}">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Visibility="{Binding IsNew, 
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" 
                                                             Kind="Plus"
                                                             Foreground="#badc58"
                                                             Height="12"
                                                             Width="12"
                                                             VerticalAlignment="Center"
                                                             Margin="0,0,5,0"/>
                                    <TextBlock Text="{Binding FileName}"
                                               Margin="0,1,0,0"
                                               Height="17" />
                                </StackPanel>
                            </DataTemplate>                            
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="Auto" Header="Path">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type viewModels:FileViewModel}">
                                <TextBlock Text="{Binding Path}" 
                                           Margin="0,1,0,0"
                                           Height="17"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Canvas x:Name="LeftCanvas" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0"
                Visibility="{Binding OriginFolderEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"
                Background="{DynamicResource MaterialDesignPaper}">
            <Grid Width="{Binding ActualWidth, ElementName=LeftCanvas}" 
                  Height="{Binding ActualHeight, ElementName=LeftCanvas}">
                <Button Command="{Binding OpenOriginFolderCmd}"
                        Content="OPEN ORIGIN FOLDER"
                        Style="{StaticResource FolderButton}"
                        VerticalAlignment="Center" 
                        HorizontalAlignment="Center" />    
            </Grid>
        </Canvas>
        <GridSplitter Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" 
                      Style="{StaticResource GridSplitter}"
                      HorizontalAlignment="Stretch"/>
        
        <ToolBarTray Grid.Row="1" Grid.Column="2" IsLocked="True">
            <ToolBar Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="True">
                <ListBox SelectionChanged="OnEncryptedListSelectionChanged">
                    <ListBoxItem Padding="0,4" x:Name="SortAlpha" ToolTip="Sort by name">
                        <materialDesign:PackIcon Kind="SortAlphabetical" />
                    </ListBoxItem>
                    <ListBoxItem Padding="0,4" x:Name="SortWeight" ToolTip="Sort by size">
                        <materialDesign:PackIcon Kind="Weight" />
                    </ListBoxItem>
                </ListBox>
                <Separator Margin="6,5" />
                <Button ToolTip="Delete all" Command="{Binding ClearDestCmd}" Padding="16,4" >
                    <materialDesign:PackIcon Kind="Broom" />
                </Button>
                <Separator Margin="6,5" />
                <Label Content="{Binding EncryptedFilesToolBar}"
                    VerticalAlignment="Center" />
            </ToolBar>
        </ToolBarTray>
        <ListView Grid.Row="2" Grid.Column="2" 
                  x:Name="EncryptedListView"
                  ItemsSource="{Binding EncryptedFiles}"
                  Focusable="False">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                    <Setter Property="Focusable" Value="False" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView AllowsColumnReorder="False">
                    <GridViewColumn Width="Auto" Header="Filename">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type viewModels:FileViewModel}">
                                <TextBlock Text="{Binding FileName}" 
                                           Margin="0,1,0,0"
                                           Height="17" />
                            </DataTemplate>                            
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="Auto" Header="Size">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type viewModels:FileViewModel}">
                                <TextBlock Text="{Binding SizeMb}" 
                                           Margin="0,1,0,0"
                                           Height="17" />
                            </DataTemplate>                            
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Canvas x:Name="RightCanvas" Grid.Row="1" Grid.RowSpan="2" Grid.Column="2" 
                Visibility="{Binding DestinationFolderEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"
                Background="{DynamicResource MaterialDesignPaper}">
            <Grid Width="{Binding ActualWidth, ElementName=RightCanvas}" 
                  Height="{Binding ActualHeight, ElementName=RightCanvas}">
                <Button Command="{Binding OpenDestinationFolderCmd}"
                        Content="OPEN DEST FOLDER"
                        Style="{StaticResource FolderButton}"
                        VerticalAlignment="Center" 
                        HorizontalAlignment="Center" />    
            </Grid>
        </Canvas>
        
        <materialDesign:Card Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                             x:Name="BottomCard" Padding="3" UniformCornerRadius="0">
            <Grid x:Name="BottomControls">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0"
                        x:Name="EncryptData"
                        Style="{StaticResource EncryptButton}"
                        Command="{Binding EncryptCmd}"
                        Margin="5,5,5,5"
                        Content="ENCRYPT"/>

                <Rectangle Grid.Column="1" Margin="4" Style="{StaticResource Separator}" />

                <Button Grid.Column="2"
                        Click="StartServer_OnClick"
                        x:Name="StartServer"
                        Command="{Binding StartServerCmd}"
                        Width="100"
                        Margin="5,5,5,5"
                        Content="{Binding ServerText}"/>

                <Button Grid.Column="3"
                        x:Name="GetJson"
                        Command="{Binding GetJsonCommand}"
                        Style="{StaticResource JSonButton}"
                        Margin="0,5,5,5"
                        Content="GET JSON"/>
                
                <Button Grid.Column="4"
                        x:Name="SendData"
                        Command="{Binding SendDataCommand}"
                        Style="{StaticResource SendButton}"
                        Margin="0,5,5,5"
                        Content="SEND DATA"/>

                <TextBlock x:Name="ServerMessageBlock"
                           Grid.Column="5" 
                           TextAlignment="Right"
                           VerticalAlignment="Center"
                           Margin="0,0,5,0"
                           Style="{StaticResource ServerBlock}"
                           Text="{Binding ServerMessage}" />

                <ProgressBar x:Name="ServerProgressBar"
                             Grid.Column="6"
                             Height="10"
                             Width="200"
                             Foreground="#6c5ce7"
                             Margin="10,0,10,0"
                             Visibility="{Binding ShowProgressBar, Converter={StaticResource BooleanToVisibilityConverter}}"
                             Minimum="0"
                             Maximum="{Binding ProgressBarMax}"
                             Value="{Binding ProgressBarValue}"/>
            </Grid>
        </materialDesign:Card>
        
        <materialDesign:DialogHost Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
                        x:Name="Dialog" HorizontalAlignment="Center" VerticalAlignment="Center">
            <materialDesign:DialogHost.Resources>
                <Style TargetType="materialDesign:Card" BasedOn="{StaticResource {x:Type materialDesign:Card}}">
                    <Style.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </Style.Resources>
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />
                </Style>
            </materialDesign:DialogHost.Resources>
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Margin="16">
                    <TextBlock Style="{StaticResource DialogMessage}">Do you want to exit ?</TextBlock>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                        <Button Style="{StaticResource DialogOkButton}"
                            IsDefault="True"
                            Margin="0,15,8,0"
                            Command="{Binding CloseDialogCmd}"
                            Content="ACCEPT">
                            <Button.CommandParameter>
                                <system:Boolean>True</system:Boolean>
                            </Button.CommandParameter>
                        </Button>
                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                            IsCancel="True"
                            Margin="0,15,0,0"
                            Command="{Binding CloseDialogCmd}"
                            Content="CANCEL">
                            <Button.CommandParameter>
                                <system:Boolean>False</system:Boolean>
                            </Button.CommandParameter>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>
        
        <materialDesign:DialogHost Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
                        x:Name="DialogDevice" HorizontalAlignment="Center" VerticalAlignment="Center">
            <materialDesign:DialogHost.Resources>
                <Style TargetType="materialDesign:Card" BasedOn="{StaticResource {x:Type materialDesign:Card}}">
                    <Style.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </Style.Resources>
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />
                </Style>
            </materialDesign:DialogHost.Resources>
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Margin="16" Orientation="Vertical">
                    <TextBlock Style="{StaticResource DialogMessage}">Select device</TextBlock>
                    <ListBox Margin="0,10,0,0"
                             Style="{StaticResource MaterialDesignToolToggleListBox}" ItemsSource="{Binding Devices, Mode=TwoWay}"
                             Width="auto"
                             Height="auto"
                             HorizontalAlignment="Left"
                             SelectedItem="{Binding Device, Mode=TwoWay}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="20" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="110" />
                                    </Grid.ColumnDefinitions>
                                    <materialDesign:PackIcon Kind="AndroidDebugBridge" Grid.Column="0" />
                                    <TextBlock Style="{StaticResource DeviceText}"
                                               Margin="0,2,0,0"
                                               Text="{Binding Model}" 
                                               TextAlignment="Center"
                                               Grid.Column="1" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button Style="{StaticResource DialogOkButton}"
                            IsDefault="True"
                            Margin="0,15,0,0"
                            Command="{Binding CloseDialogDeviceCmd}"
                            HorizontalAlignment="Stretch"
                            Content="ACCEPT">
                        <Button.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>
    </Grid>
</UserControl>
